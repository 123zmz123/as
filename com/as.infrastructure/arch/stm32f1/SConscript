import os
from building import *

Import('asenv')
MODULES=asenv['MODULES']
ASROOT=asenv['ASROOT']

cwd = GetCurrentDir()

objs = []

if('CAN' in MODULES):
    objs += Glob('mcal/Can.c')
    asenv.Append(CPPDEFINES=['USE_CAN','CAN_LL_DL=8'])

if('DIO' in MODULES):
    objs += Glob('mcal/Dio.c')
    asenv.Append(CPPDEFINES='USE_DIO')

if('MCU' in MODULES):
    objs += Glob('mcal/Mcu.c')
    asenv.Append(CPPDEFINES='USE_MCU')

if('PORT' in MODULES):
    objs += Glob('mcal/Port.c')
    asenv.Append(CPPDEFINES='USE_PORT')

if('LWIP' in MODULES):
    objs += Glob('lwip/*.c')
    objs += Glob('Libraries/STM32_ETH_Driver/src/*.c')
    asenv.Append(CPPPATH=['%s/Libraries/STM32_ETH_Driver/inc'%(cwd)])

objs += Glob('Libraries/STM32F10x_StdPeriph_Driver/src/*.c')
objs += Glob('Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/*.c')
asenv.Append(CPPPATH=['%s/Libraries/STM32F10x_StdPeriph_Driver/inc'%(cwd)])
asenv.Append(CPPPATH=['%s/Libraries/CMSIS/Include'%(cwd)])
asenv.Append(CPPPATH=['%s/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x'%(cwd)])

asenv.Append(CCFLAGS=['-std=gnu99','-O0','-g'])
asenv.Append(ASFLAGS=['-g'])

asenv.Append(CCFLAGS=['-mcpu=cortex-m3','-mthumb'])
asenv.Append(ASFLAGS=['-mcpu=cortex-m3','-mthumb'])

asenv['S19'] = 'arm-none-eabi-objcopy -O srec --srec-forceS3 --srec-len 32'

asenv.Append(CCFLAGS=['-ffunction-sections','-fdata-sections'])
asenv.Append(LINKFLAGS='--gc-sections')

asenv.Append(LIBS=['c','gcc'])

SelectCompilerArmNoneEabi()

if(asenv['RELEASE']=='asboot'):
    asenv['flsdrv']['objs'] += Glob('mcal/Flash.c')
    
Return('objs')
